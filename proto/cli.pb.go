// Copyright (c) 2020, pole-group. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: cli.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AddPeerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID  string `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	LeaderID string `protobuf:"bytes,2,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	PeerID   string `protobuf:"bytes,3,opt,name=peerID,proto3" json:"peerID,omitempty"`
}

func (x *AddPeerRequest) Reset() {
	*x = AddPeerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPeerRequest) ProtoMessage() {}

func (x *AddPeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPeerRequest.ProtoReflect.Descriptor instead.
func (*AddPeerRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{0}
}

func (x *AddPeerRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *AddPeerRequest) GetLeaderID() string {
	if x != nil {
		return x.LeaderID
	}
	return ""
}

func (x *AddPeerRequest) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

type AddPeerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldPeers      []string       `protobuf:"bytes,1,rep,name=oldPeers,proto3" json:"oldPeers,omitempty"`
	NewPeers      []string       `protobuf:"bytes,2,rep,name=newPeers,proto3" json:"newPeers,omitempty"`
	ErrorResponse *ErrorResponse `protobuf:"bytes,99,opt,name=errorResponse,proto3" json:"errorResponse,omitempty"`
}

func (x *AddPeerResponse) Reset() {
	*x = AddPeerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPeerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPeerResponse) ProtoMessage() {}

func (x *AddPeerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPeerResponse.ProtoReflect.Descriptor instead.
func (*AddPeerResponse) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{1}
}

func (x *AddPeerResponse) GetOldPeers() []string {
	if x != nil {
		return x.OldPeers
	}
	return nil
}

func (x *AddPeerResponse) GetNewPeers() []string {
	if x != nil {
		return x.NewPeers
	}
	return nil
}

func (x *AddPeerResponse) GetErrorResponse() *ErrorResponse {
	if x != nil {
		return x.ErrorResponse
	}
	return nil
}

type RemovePeerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID  string `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	LeaderID string `protobuf:"bytes,2,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	PeerID   string `protobuf:"bytes,3,opt,name=peerID,proto3" json:"peerID,omitempty"`
}

func (x *RemovePeerRequest) Reset() {
	*x = RemovePeerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePeerRequest) ProtoMessage() {}

func (x *RemovePeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePeerRequest.ProtoReflect.Descriptor instead.
func (*RemovePeerRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{2}
}

func (x *RemovePeerRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *RemovePeerRequest) GetLeaderID() string {
	if x != nil {
		return x.LeaderID
	}
	return ""
}

func (x *RemovePeerRequest) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

type RemovePeerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldPeers      []string       `protobuf:"bytes,1,rep,name=oldPeers,proto3" json:"oldPeers,omitempty"`
	NewPeers      []string       `protobuf:"bytes,2,rep,name=newPeers,proto3" json:"newPeers,omitempty"`
	ErrorResponse *ErrorResponse `protobuf:"bytes,99,opt,name=errorResponse,proto3" json:"errorResponse,omitempty"`
}

func (x *RemovePeerResponse) Reset() {
	*x = RemovePeerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePeerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePeerResponse) ProtoMessage() {}

func (x *RemovePeerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePeerResponse.ProtoReflect.Descriptor instead.
func (*RemovePeerResponse) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{3}
}

func (x *RemovePeerResponse) GetOldPeers() []string {
	if x != nil {
		return x.OldPeers
	}
	return nil
}

func (x *RemovePeerResponse) GetNewPeers() []string {
	if x != nil {
		return x.NewPeers
	}
	return nil
}

func (x *RemovePeerResponse) GetErrorResponse() *ErrorResponse {
	if x != nil {
		return x.ErrorResponse
	}
	return nil
}

type ChangePeersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID  string   `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	LeaderID string   `protobuf:"bytes,2,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	NewPeers []string `protobuf:"bytes,3,rep,name=newPeers,proto3" json:"newPeers,omitempty"`
}

func (x *ChangePeersRequest) Reset() {
	*x = ChangePeersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePeersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePeersRequest) ProtoMessage() {}

func (x *ChangePeersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePeersRequest.ProtoReflect.Descriptor instead.
func (*ChangePeersRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{4}
}

func (x *ChangePeersRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *ChangePeersRequest) GetLeaderID() string {
	if x != nil {
		return x.LeaderID
	}
	return ""
}

func (x *ChangePeersRequest) GetNewPeers() []string {
	if x != nil {
		return x.NewPeers
	}
	return nil
}

type ChangePeersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldPeers      []string       `protobuf:"bytes,1,rep,name=oldPeers,proto3" json:"oldPeers,omitempty"`
	NewPeers      []string       `protobuf:"bytes,2,rep,name=newPeers,proto3" json:"newPeers,omitempty"`
	ErrorResponse *ErrorResponse `protobuf:"bytes,99,opt,name=errorResponse,proto3" json:"errorResponse,omitempty"`
}

func (x *ChangePeersResponse) Reset() {
	*x = ChangePeersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePeersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePeersResponse) ProtoMessage() {}

func (x *ChangePeersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePeersResponse.ProtoReflect.Descriptor instead.
func (*ChangePeersResponse) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{5}
}

func (x *ChangePeersResponse) GetOldPeers() []string {
	if x != nil {
		return x.OldPeers
	}
	return nil
}

func (x *ChangePeersResponse) GetNewPeers() []string {
	if x != nil {
		return x.NewPeers
	}
	return nil
}

func (x *ChangePeersResponse) GetErrorResponse() *ErrorResponse {
	if x != nil {
		return x.ErrorResponse
	}
	return nil
}

type SnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID string `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	PeerID  string `protobuf:"bytes,2,opt,name=peerID,proto3" json:"peerID,omitempty"`
}

func (x *SnapshotRequest) Reset() {
	*x = SnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotRequest) ProtoMessage() {}

func (x *SnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotRequest.ProtoReflect.Descriptor instead.
func (*SnapshotRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{6}
}

func (x *SnapshotRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *SnapshotRequest) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

type ResetPeerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID  string   `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	PeerID   string   `protobuf:"bytes,2,opt,name=peerID,proto3" json:"peerID,omitempty"`
	OldPeers []string `protobuf:"bytes,3,rep,name=oldPeers,proto3" json:"oldPeers,omitempty"`
	NewPeers []string `protobuf:"bytes,4,rep,name=newPeers,proto3" json:"newPeers,omitempty"`
}

func (x *ResetPeerRequest) Reset() {
	*x = ResetPeerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPeerRequest) ProtoMessage() {}

func (x *ResetPeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPeerRequest.ProtoReflect.Descriptor instead.
func (*ResetPeerRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{7}
}

func (x *ResetPeerRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *ResetPeerRequest) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

func (x *ResetPeerRequest) GetOldPeers() []string {
	if x != nil {
		return x.OldPeers
	}
	return nil
}

func (x *ResetPeerRequest) GetNewPeers() []string {
	if x != nil {
		return x.NewPeers
	}
	return nil
}

type TransferLeaderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID  string `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	LeaderID string `protobuf:"bytes,2,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	PeerID   string `protobuf:"bytes,3,opt,name=peerID,proto3" json:"peerID,omitempty"`
}

func (x *TransferLeaderRequest) Reset() {
	*x = TransferLeaderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferLeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferLeaderRequest) ProtoMessage() {}

func (x *TransferLeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferLeaderRequest.ProtoReflect.Descriptor instead.
func (*TransferLeaderRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{8}
}

func (x *TransferLeaderRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *TransferLeaderRequest) GetLeaderID() string {
	if x != nil {
		return x.LeaderID
	}
	return ""
}

func (x *TransferLeaderRequest) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

type GetLeaderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID string `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	PeerID  string `protobuf:"bytes,2,opt,name=peerID,proto3" json:"peerID,omitempty"`
}

func (x *GetLeaderRequest) Reset() {
	*x = GetLeaderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaderRequest) ProtoMessage() {}

func (x *GetLeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaderRequest.ProtoReflect.Descriptor instead.
func (*GetLeaderRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{9}
}

func (x *GetLeaderRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *GetLeaderRequest) GetPeerID() string {
	if x != nil {
		return x.PeerID
	}
	return ""
}

type GetLeaderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderID      string         `protobuf:"bytes,1,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	ErrorResponse *ErrorResponse `protobuf:"bytes,99,opt,name=errorResponse,proto3" json:"errorResponse,omitempty"`
}

func (x *GetLeaderResponse) Reset() {
	*x = GetLeaderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaderResponse) ProtoMessage() {}

func (x *GetLeaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaderResponse.ProtoReflect.Descriptor instead.
func (*GetLeaderResponse) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{10}
}

func (x *GetLeaderResponse) GetLeaderID() string {
	if x != nil {
		return x.LeaderID
	}
	return ""
}

func (x *GetLeaderResponse) GetErrorResponse() *ErrorResponse {
	if x != nil {
		return x.ErrorResponse
	}
	return nil
}

type GetPeersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID   string `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	LeaderID  string `protobuf:"bytes,2,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	OnlyAlive bool   `protobuf:"varint,3,opt,name=onlyAlive,proto3" json:"onlyAlive,omitempty"`
}

func (x *GetPeersRequest) Reset() {
	*x = GetPeersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeersRequest) ProtoMessage() {}

func (x *GetPeersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeersRequest.ProtoReflect.Descriptor instead.
func (*GetPeersRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{11}
}

func (x *GetPeersRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *GetPeersRequest) GetLeaderID() string {
	if x != nil {
		return x.LeaderID
	}
	return ""
}

func (x *GetPeersRequest) GetOnlyAlive() bool {
	if x != nil {
		return x.OnlyAlive
	}
	return false
}

type GetPeersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peers         []string       `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
	Learners      []string       `protobuf:"bytes,2,rep,name=learners,proto3" json:"learners,omitempty"`
	ErrorResponse *ErrorResponse `protobuf:"bytes,99,opt,name=errorResponse,proto3" json:"errorResponse,omitempty"`
}

func (x *GetPeersResponse) Reset() {
	*x = GetPeersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeersResponse) ProtoMessage() {}

func (x *GetPeersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeersResponse.ProtoReflect.Descriptor instead.
func (*GetPeersResponse) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{12}
}

func (x *GetPeersResponse) GetPeers() []string {
	if x != nil {
		return x.Peers
	}
	return nil
}

func (x *GetPeersResponse) GetLearners() []string {
	if x != nil {
		return x.Learners
	}
	return nil
}

func (x *GetPeersResponse) GetErrorResponse() *ErrorResponse {
	if x != nil {
		return x.ErrorResponse
	}
	return nil
}

type AddLearnersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID  string   `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	LeaderID string   `protobuf:"bytes,2,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	Learners []string `protobuf:"bytes,3,rep,name=learners,proto3" json:"learners,omitempty"`
}

func (x *AddLearnersRequest) Reset() {
	*x = AddLearnersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLearnersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLearnersRequest) ProtoMessage() {}

func (x *AddLearnersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLearnersRequest.ProtoReflect.Descriptor instead.
func (*AddLearnersRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{13}
}

func (x *AddLearnersRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *AddLearnersRequest) GetLeaderID() string {
	if x != nil {
		return x.LeaderID
	}
	return ""
}

func (x *AddLearnersRequest) GetLearners() []string {
	if x != nil {
		return x.Learners
	}
	return nil
}

type RemoveLearnersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID  string   `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	LeaderID string   `protobuf:"bytes,2,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	Learners []string `protobuf:"bytes,3,rep,name=learners,proto3" json:"learners,omitempty"`
}

func (x *RemoveLearnersRequest) Reset() {
	*x = RemoveLearnersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveLearnersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveLearnersRequest) ProtoMessage() {}

func (x *RemoveLearnersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveLearnersRequest.ProtoReflect.Descriptor instead.
func (*RemoveLearnersRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{14}
}

func (x *RemoveLearnersRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *RemoveLearnersRequest) GetLeaderID() string {
	if x != nil {
		return x.LeaderID
	}
	return ""
}

func (x *RemoveLearnersRequest) GetLearners() []string {
	if x != nil {
		return x.Learners
	}
	return nil
}

type ResetLearnersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID  string   `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	LeaderID string   `protobuf:"bytes,2,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	Learners []string `protobuf:"bytes,3,rep,name=learners,proto3" json:"learners,omitempty"`
}

func (x *ResetLearnersRequest) Reset() {
	*x = ResetLearnersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetLearnersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetLearnersRequest) ProtoMessage() {}

func (x *ResetLearnersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetLearnersRequest.ProtoReflect.Descriptor instead.
func (*ResetLearnersRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{15}
}

func (x *ResetLearnersRequest) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *ResetLearnersRequest) GetLeaderID() string {
	if x != nil {
		return x.LeaderID
	}
	return ""
}

func (x *ResetLearnersRequest) GetLearners() []string {
	if x != nil {
		return x.Learners
	}
	return nil
}

type LearnersOpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldLearners   []string       `protobuf:"bytes,1,rep,name=oldLearners,proto3" json:"oldLearners,omitempty"`
	NewLearners   []string       `protobuf:"bytes,2,rep,name=newLearners,proto3" json:"newLearners,omitempty"`
	ErrorResponse *ErrorResponse `protobuf:"bytes,99,opt,name=errorResponse,proto3" json:"errorResponse,omitempty"`
}

func (x *LearnersOpResponse) Reset() {
	*x = LearnersOpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LearnersOpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LearnersOpResponse) ProtoMessage() {}

func (x *LearnersOpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LearnersOpResponse.ProtoReflect.Descriptor instead.
func (*LearnersOpResponse) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{16}
}

func (x *LearnersOpResponse) GetOldLearners() []string {
	if x != nil {
		return x.OldLearners
	}
	return nil
}

func (x *LearnersOpResponse) GetNewLearners() []string {
	if x != nil {
		return x.NewLearners
	}
	return nil
}

func (x *LearnersOpResponse) GetErrorResponse() *ErrorResponse {
	if x != nil {
		return x.ErrorResponse
	}
	return nil
}

var File_cli_proto protoreflect.FileDescriptor

var file_cli_proto_rawDesc = []byte{
	0x0a, 0x09, 0x63, 0x6c, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x09, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5e, 0x0a,
	0x0e, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x22, 0x85, 0x01,
	0x0a, 0x0f, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x6c, 0x64, 0x50, 0x65, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x65, 0x77, 0x50, 0x65, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x65, 0x77, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x3a, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x61, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50,
	0x65, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x22, 0x88, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x6c, 0x64, 0x50, 0x65, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x65, 0x77, 0x50, 0x65, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x65, 0x77, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x3a, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x66, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x65, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x50, 0x65, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x50, 0x65, 0x65, 0x72, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x13,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x6c, 0x64, 0x50, 0x65, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x50, 0x65, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x3a, 0x0a, 0x0d, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x63, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x0a, 0x0f, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x22, 0x7c, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x6c, 0x64, 0x50, 0x65, 0x65, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x65, 0x77, 0x50, 0x65, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x65, 0x77, 0x50, 0x65, 0x65, 0x72, 0x73, 0x22, 0x65, 0x0a, 0x15, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49,
	0x44, 0x22, 0x44, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x22, 0x6b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x3a, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x65, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x6f, 0x6e, 0x6c, 0x79, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x6f, 0x6e, 0x6c, 0x79, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65,
	0x72, 0x73, 0x12, 0x3a, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x66,
	0x0a, 0x12, 0x41, 0x64, 0x64, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x22, 0x69, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72,
	0x73, 0x22, 0x68, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x12,
	0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x6c, 0x64, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x6c, 0x64, 0x4c, 0x65, 0x61, 0x72,
	0x6e, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x4c, 0x65, 0x61, 0x72, 0x6e,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x4c, 0x65,
	0x61, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x3a, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cli_proto_rawDescOnce sync.Once
	file_cli_proto_rawDescData = file_cli_proto_rawDesc
)

func file_cli_proto_rawDescGZIP() []byte {
	file_cli_proto_rawDescOnce.Do(func() {
		file_cli_proto_rawDescData = protoimpl.X.CompressGZIP(file_cli_proto_rawDescData)
	})
	return file_cli_proto_rawDescData
}

var file_cli_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_cli_proto_goTypes = []interface{}{
	(*AddPeerRequest)(nil),        // 0: proto.AddPeerRequest
	(*AddPeerResponse)(nil),       // 1: proto.AddPeerResponse
	(*RemovePeerRequest)(nil),     // 2: proto.RemovePeerRequest
	(*RemovePeerResponse)(nil),    // 3: proto.RemovePeerResponse
	(*ChangePeersRequest)(nil),    // 4: proto.ChangePeersRequest
	(*ChangePeersResponse)(nil),   // 5: proto.ChangePeersResponse
	(*SnapshotRequest)(nil),       // 6: proto.SnapshotRequest
	(*ResetPeerRequest)(nil),      // 7: proto.ResetPeerRequest
	(*TransferLeaderRequest)(nil), // 8: proto.TransferLeaderRequest
	(*GetLeaderRequest)(nil),      // 9: proto.GetLeaderRequest
	(*GetLeaderResponse)(nil),     // 10: proto.GetLeaderResponse
	(*GetPeersRequest)(nil),       // 11: proto.GetPeersRequest
	(*GetPeersResponse)(nil),      // 12: proto.GetPeersResponse
	(*AddLearnersRequest)(nil),    // 13: proto.AddLearnersRequest
	(*RemoveLearnersRequest)(nil), // 14: proto.RemoveLearnersRequest
	(*ResetLearnersRequest)(nil),  // 15: proto.ResetLearnersRequest
	(*LearnersOpResponse)(nil),    // 16: proto.LearnersOpResponse
	(*ErrorResponse)(nil),         // 17: proto.ErrorResponse
}
var file_cli_proto_depIdxs = []int32{
	17, // 0: proto.AddPeerResponse.errorResponse:type_name -> proto.ErrorResponse
	17, // 1: proto.RemovePeerResponse.errorResponse:type_name -> proto.ErrorResponse
	17, // 2: proto.ChangePeersResponse.errorResponse:type_name -> proto.ErrorResponse
	17, // 3: proto.GetLeaderResponse.errorResponse:type_name -> proto.ErrorResponse
	17, // 4: proto.GetPeersResponse.errorResponse:type_name -> proto.ErrorResponse
	17, // 5: proto.LearnersOpResponse.errorResponse:type_name -> proto.ErrorResponse
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_cli_proto_init() }
func file_cli_proto_init() {
	if File_cli_proto != nil {
		return
	}
	file_rpc_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cli_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPeerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPeerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePeerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePeerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePeersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePeersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPeerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferLeaderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeaderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeaderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPeersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPeersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddLearnersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveLearnersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetLearnersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LearnersOpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cli_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cli_proto_goTypes,
		DependencyIndexes: file_cli_proto_depIdxs,
		MessageInfos:      file_cli_proto_msgTypes,
	}.Build()
	File_cli_proto = out.File
	file_cli_proto_rawDesc = nil
	file_cli_proto_goTypes = nil
	file_cli_proto_depIdxs = nil
}
